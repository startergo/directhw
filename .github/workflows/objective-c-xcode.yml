name: Xcode - Build and Analyze (10.6+ target)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Xcodebuild (Unsigned for CI)
        working-directory: ./DirectHW
        run: |
          # Build without signing for CI/CD - users can sign locally if needed
          xcodebuild -alltargets -project DirectHW.xcodeproj \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
        
      - name: libs
        working-directory: ./DirectHW
        run: make libs

      - name: Create Package
        working-directory: ./DirectHW
        run: |
          # Create unsigned package for CI/CD distribution
          # Note: For production use, kext requires valid developer signature
          # Users should re-sign with their certificates: codesign --force --sign "Developer ID" DirectHW.kext
          if command -v pkgbuild >/dev/null 2>&1; then
            pkgbuild --root ./build/Release \
              --identifier com.directhw \
              --version 1.0 \
              --scripts . \
              DirectHW.pkg || echo "Package creation with pkgbuild failed, continuing..."
          elif [ -d "DirectHW.pmdoc" ]; then
            packagemaker --doc DirectHW.pmdoc --id com.directhw --out DirectHW.pkg || echo "Package creation with packagemaker failed, continuing..."
          else
            echo "No package creation method available, skipping..."
          fi

      - name: Create DMG
        run: |
          # Prepare DMG contents
          mkdir -p dmg_contents
          if [ -f "./DirectHW/DirectHW.pkg" ]; then
            cp "./DirectHW/DirectHW.pkg" "dmg_contents/Install DirectHW.pkg"
          fi
          if [ -f "./DirectHW/ReadMe.rtf" ]; then
            cp "./DirectHW/ReadMe.rtf" "dmg_contents/Read Me.rtf"
          fi
          if [ -f "./DirectHW/Welcome.rtf" ]; then
            cp "./DirectHW/Welcome.rtf" "dmg_contents/Welcome.rtf"
          fi
          
          # Create DMG using create-dmg
          ./create-dmg/create-dmg \
            --volname "DirectHW" \
            --window-size 600 400 \
            --icon-size 100 \
            --app-drop-link 425 120 \
            DirectHW.dmg \
            dmg_contents/ || echo "DMG creation failed, uploading build artifacts instead"

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: DirectHW-DMG
          path: |
            DirectHW.dmg
            DirectHW/build/Release/
          if-no-files-found: warn

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: DirectHW-Build-Artifacts
          path: DirectHW/build/Release
